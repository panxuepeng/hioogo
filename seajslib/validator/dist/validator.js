define("validator/1.2.0/validator", [], function(require, exports) {});

/*! Validator.js
 * @author: sofish https://github.com/sofish
 * @copyright: MIT license */
// Ô¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ /\$\w+/ ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ $item ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ jQuery Object
~function($) {
    var patterns, fields, errorElement, addErrorClass, removeErrorClass, novalidate, validateForm, validateFields, radios, removeFromUnvalidFields, asyncValidate, getVal, aorbValidate, validateReturn, unvalidFields = [];
    // ï¿½ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½
    patterns = {
        // ï¿½ï¿½Ç°Ð£ï¿½ï¿½ï¿½ï¿½Ôªï¿½Ø£ï¿½Ä¬ï¿½ï¿½Ã»ï¿½Ð£ï¿½ï¿½ï¿½ `validate()` ï¿½ï¿½ï¿½ï¿½ï¿½Ð´ï¿½ï¿½ï¿½
        // $item: {},
        email: function(text) {
            return /^(?:[a-z0-9]+[_\-+.]?)*[a-z0-9]+@(?:([a-z0-9]+-?)*[a-z0-9]+.)+([a-z]{2,})+$/i.test(text);
        },
        // ï¿½ï¿½Ö§ï¿½ï¿½ 8 ï¿½ï¿½ï¿½ï¿½ï¿½Íµï¿½ day
        // 20120409 | 2012-04-09 | 2012/04/09 | 2012.04.09 | ï¿½ï¿½ï¿½Ï¸ï¿½ï¿½ï¿½ï¿½ï¿½ 0 ï¿½ï¿½×´ï¿½ï¿½
        date: function(text) {
            var reg = /^([1-2]\d{3})([-/.])?(1[0-2]|0?[1-9])([-/.])?([1-2]\d|3[01]|0?[1-9])$/, taste, d;
            if (!reg.test(text)) return false;
            taste = reg.exec(text);
            year = +taste[1], month = +taste[3] - 1, day = +taste[5];
            d = new Date(year, month, day);
            return year === d.getFullYear() && month === d.getMonth() && day === d.getDate();
        },
        // ï¿½Ö»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¹ï¿½ï¿½Ö»ï¿½ï¿½ï¿½Ó¦ï¿½ï¿½ï¿½ï¿½ 1 ï¿½ï¿½Í·ï¿½ï¿½ï¿½Ú¶ï¿½Î»ï¿½ï¿½ 3-9ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Î»ï¿½ï¿½Îª 11 Î»ï¿½ï¿½ï¿½ï¿½
        mobile: function(text) {
            return /^1[3-9]\d{9}$/.test(text);
        },
        // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¹ï¿½ï¿½ï¿½ï¿½ï¿½Ö§ï¿½Ö£ï¿½ï¿½ï¿½ï¿½Å¿ï¿½ï¿½ï¿½ 3ï¿½ï¿½4Î»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 0 ï¿½ï¿½Í·ï¿½ï¿½ï¿½ç»°ï¿½Å²ï¿½ï¿½ï¿½ 0 ï¿½ï¿½Í·ï¿½ï¿½ï¿½ï¿½ 8 Î»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 7 Î»ï¿½ï¿½
        //  ï¿½ï¿½ 400/800 ï¿½ï¿½Í·ï¿½ï¿½ï¿½â£¬ï¿½ï¿½Ó¦ï¿½ç»°ï¿½ï¿½ï¿½ç»°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 7 Î»ï¿½ï¿½
        // 0755-29819991 | 0755 29819991 | 400-6927972 | 4006927927 | 800...
        tel: function(text) {
            return /^(?:(?:0\d{2,3}[- ]?[1-9]\d{6,7})|(?:[48]00[- ]?[1-9]\d{6}))$/.test(text);
        },
        number: function(text) {
            var min = +this.$item.attr("min"), max = +this.$item.attr("max"), result = /^\-?(?:[1-9]\d*|0)(?:[.]\d)?$/.test(text), text = +text, step = +this.$item.attr("step");
            // ignore invalid range silently
            isNaN(min) && (min = text - 1);
            isNaN(max) && (max = text + 1);
            // Ä¿Ç°ï¿½ï¿½Êµï¿½ï¿½ step ï¿½ï¿½ï¿½ï¿½Ð¡ï¿½ï¿½ 0
            return result && (isNaN(step) || 0 >= step ? text >= min && text <= max : 0 === (text + min) % step && text >= min && text <= max);
        },
        // ï¿½Ð¶ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ min / max Ö®ï¿½ï¿½
        range: function(text) {
            return this.number(text);
        },
        // Ö§ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½:
        // http(s)://(username:password@)(www.)domain.(com/co.uk)(/...)
        // (s)ftp://(username:password@)domain.com/...
        // git://(username:password@)domain.com/...
        // irc(6/s)://host:port/... // ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½
        // afp over TCP/IP: afp://[<user>@]<host>[:<port>][/[<path>]]
        // telnet://<user>:<password>@<host>[:<port>/]
        // smb://[<user>@]<host>[:<port>][/[<path>]][?<param1>=<value1>[;<param2>=<value2>]]
        url: function(text) {
            var protocols = "((https?|s?ftp|irc[6s]?|git|afp|telnet|smb):\\/\\/)?", userInfo = "([a-z0-9]\\w*(\\:[\\S]+)?\\@)?", domain = "([a-z0-9]([\\w]*[a-z0-9])*\\.)?[a-z0-9]\\w*\\.[a-z]{2,}(\\.[a-z]{2,})?", port = "(:\\d{1,5})?", ip = "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}", address = "(\\/\\S*)?", domainType = [ protocols, userInfo, domain, port, address ], ipType = [ protocols, userInfo, ip, port, address ], validate;
            validate = function(type) {
                return new RegExp("^" + type.join("") + "$", "i").test(text);
            };
            return validate(domainType) || validate(ipType);
        },
        // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¿Ç°Ö»ï¿½Ç²ï¿½Îªï¿½Õ¾ï¿½ okï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô¶ï¿½ï¿½ï¿½
        password: function(text) {
            return this.text(text);
        },
        checkbox: function() {
            return patterns._checker("checkbox");
        },
        // radio ï¿½ï¿½ï¿½Ýµï¿½Ç° radio ï¿½ï¿½ name ï¿½ï¿½ï¿½Ô»ï¿½È¡Ôªï¿½Ø£ï¿½Ö»Òª name ï¿½ï¿½Í¬ï¿½ï¿½ï¿½â¼¸ï¿½ï¿½Ôªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ checkedï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¤ï¿½Ñ¹ï¿½
        radio: function(checkbox) {
            $item = $(checkbox);
            return patterns._checker("radio");
        },
        _checker: function(type) {
            // TODO: a better way?!
            var form = this.$item.parents("form").eq(0), identifier = "input:" + type + '[name="' + this.$item.attr("name") + '"]', result = false, $items = $(identifier, form);
            // TODO: a faster way?!
            $items = $items.filter("[required]");
            if (!$items.length) {
                result = true;
            }
            $items.each(function(i, item) {
                if (item.checked && !result) return result = true;
            });
            return result;
        },
        // text[notEmpty] ï¿½íµ¥ï¿½î²»Îªï¿½ï¿½
        // [type=text] Ò²ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
        text: function(text) {
            var max = parseInt(this.$item.attr("maxlength"), 10), noEmpty;
            notEmpty = function(text) {
                return !!text.length && !/^\s+$/.test(text);
            };
            return isNaN(max) ? notEmpty(text) : notEmpty(text) && text.length <= max;
        }
    };
    // ï¿½ì²½ï¿½ï¿½Ö¤
    asyncValidate = function($item, klass, isErrorOnParent) {
        var data = $item.data(), url = data["url"], method = data["method"] || "get", key = data["key"] || "key", text = getVal($item), params = {};
        params[key] = text;
        $[method](url, params).success(function(isValidate) {
            var message = isValidate ? "IM VALIDED" : "unvalid";
            return validateReturn.call(this, $item, klass, isErrorOnParent, message);
        }).error(function() {});
    };
    // ï¿½ï¿½Ñ¡Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð±ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ñ¾ï¿½ï¿½ï¿½
    // <input data-aorb="a" >
    // <input data-aorb="b" >
    aorbValidate = function($item, klass, isErrorOnParent) {
        var id = $item.data("aorb") === "a" ? "b" : "a", $pair = $("[data-aorb=" + id + "]", $item.parents("form").eq(0)), a = [ $item, klass, isErrorOnParent ], b = [ $pair, klass, isErrorOnParent ], result = 0;
        result += validateReturn.apply(this, a) ? 0 : 1;
        result += validateReturn.apply(this, b) ? 0 : 1;
        result = result > 0 ? (removeErrorClass.apply(this, a), removeErrorClass.apply(this, b), 
        false) : validateReturn.apply(this, a.concat("unvalid"));
        // Í¨ï¿½ï¿½ï¿½ò·µ»ï¿½ false
        return result;
    };
    // ï¿½ï¿½Ö¤ï¿½ï¿½ï¿½Ä·ï¿½ï¿½ï¿½Öµ
    validateReturn = function($item, klass, parent, message) {
        if (!$item) return "DONT VALIDATE UNEXIST ELEMENT";
        var pattern, type, val, ret, event;
        pattern = $item.attr("pattern");
        required = $item.is("[required]");
        pattern && pattern.replace("\\", "\\\\");
        type = $item.data("type") || $item.attr("type") || "text";
        // hack ie: ï¿½ï¿½ select ï¿½ï¿½ textarea ï¿½ï¿½ï¿½Øµï¿½ type ï¿½ï¿½Îª NODENAME ï¿½ï¿½ï¿½Ç¿ï¿½
        type = patterns[type] ? type : "text";
        val = $.trim(getVal($item));
        event = $item.data("event");
        // HTML5 pattern Ö§ï¿½ï¿½
        message = message ? message : pattern ? new RegExp(pattern).test(val) || "unvalid" : patterns[type](val) || "unvalid";
        // ï¿½ï¿½ï¿½ØµÄ´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ = {
        //    $el: {jQuery Element Object} // ï¿½ï¿½Ç°ï¿½íµ¥ï¿½ï¿½
        //  , type: {String} //ï¿½íµ¥ï¿½ï¿½ï¿½ï¿½ï¿½Í£ï¿½ï¿½ï¿½ [type=radio]
        //  , message: {String} // error messageï¿½ï¿½Ö»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµ
        // }
        // NOTE: ï¿½ï¿½ jQuery Object ï¿½ï¿½ï¿½ï¿½ trigger ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô­ï¿½ï¿½ï¿½ï¿½ DOM Object
        if (message === "unvalid") removeErrorClass($item, klass, parent);
        var isError = /^(?:unvalid|empty)$/.test(message);
        if (!required && !val) {
            isError = false;
        }
        return isError ? (ret = {
            $el: addErrorClass.call(this, $item, klass, parent, message),
            type: type,
            error: message
        }, $item.trigger("after:" + event, $item), ret) : (removeErrorClass.call(this, $item, klass, parent), 
        $item.trigger("after:" + event, $item), false);
    };
    // ï¿½ï¿½È¡ï¿½ï¿½Ð£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    fields = function(identifie, form) {
        return $(identifie, form);
    };
    // ï¿½ï¿½È¡ï¿½ï¿½Ð£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµ
    getVal = function($item) {
        return $item.val() || ($item.is("[contenteditable]") ? $item.text() : "");
    };
    // Ð£ï¿½ï¿½Ò»ï¿½ï¿½ï¿½íµ¥ï¿½ï¿½
    // ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ó£¬µï¿½Ç°ï¿½íµ¥ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Í£ï¿½Í¨ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ false
    validate = function($item, klass, parent) {
        var async, aorb, type, val, commonArgs, event;
        // ï¿½Ñµï¿½Ç°Ôªï¿½Ø·Åµï¿½ patterns ï¿½ï¿½ï¿½ï¿½ï¿½Ð±ï¿½ï¿½ï¿½
        patterns.$item = $item;
        type = $item.attr("type");
        val = getVal($item);
        async = $item.data("url");
        aorb = $item.data("aorb");
        event = $item.data("event");
        commonArgs = [ $item, klass, parent ];
        // ï¿½ï¿½Ö¸ï¿½ï¿½ `data-event` ï¿½ï¿½Ê±ï¿½ï¿½ï¿½Ú¼ï¿½ï¿½ï¿½Ç°ï¿½ï¿½ï¿½ï¿½ï¿½Ô¶ï¿½ï¿½ï¿½ï¿½Â¼ï¿½
        // NOTE: ï¿½ï¿½ jQuery Object ï¿½ï¿½ï¿½ï¿½ trigger ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô­ï¿½ï¿½ï¿½ï¿½ DOM Object
        event && $item.trigger("before:" + event, $item);
        // ï¿½ï¿½ï¿½Ð¶ï¿½ï¿½ï¿½ï¿½È²ï¿½ï¿½ï¿½ï¿½Ç²ï¿½ï¿½ï¿½ emptyï¿½ï¿½checkbox ï¿½Ç¿ï¿½ï¿½ï¿½ï¿½ï¿½Öµ
        // ï¿½ï¿½Í¨ï¿½ï¿½ï¿½ï¿½Ëµï¿½ï¿½ï¿½Ç¸ï¿½ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½ checked ï¿½ï¿½×´Ì¬
        // ï¿½ï¿½Ê±È¥ï¿½ï¿½ radio/checkbox/linkage/aorb ï¿½ï¿½ notEmpty ï¿½ï¿½ï¿½ï¿½
        if (!(/^(?:radio|checkbox)$/.test(type) || aorb) && !patterns["text"](val)) return validateReturn.call(this, $item, klass, parent, "empty");
        // ï¿½ï¿½Ñ¡Ò»ï¿½ï¿½Ö¤ï¿½ï¿½ï¿½Ð¿ï¿½ï¿½ï¿½Îªï¿½ï¿½
        if (aorb) return aorbValidate.apply(this, commonArgs);
        // ï¿½ì²½ï¿½ï¿½Ö¤ï¿½ò²»½ï¿½ï¿½ï¿½ï¿½ï¿½Í¨ï¿½ï¿½Ö¤
        if (async) return asyncValidate.apply(this, commonArgs);
        // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö¤ï¿½ï¿½ï¿½ï¿½Öµ
        return validateReturn.call(this, $item, klass, parent);
    };
    // Ð£ï¿½ï¿½ï¿½íµ¥ï¿½ï¿½
    validateFields = function($fields, method, klass, parent) {
        // TODOï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ delegate ï¿½Ä·ï¿½Ê½ï¿½ï¿½
        var reSpecialType = /^radio|checkbox/, field;
        $.each($fields, function(i, f) {
            var $f = $(f);
            $f[$f.on ? "on" : "bind"](reSpecialType.test(f.type) || "SELECT" === f.tagName ? "change blur" : method, function() {
                // ï¿½ï¿½ï¿½ï¿½ï¿½Ð´ï¿½ï¿½ó£¬·ï¿½ï¿½ØµÄ½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ó£¬´ï¿½ï¿½ï¿½ validedFields ï¿½ï¿½ï¿½á¹©ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ `validateForm`
                var $items = $(this);
                if (reSpecialType.test(this.type)) {
                    $items = $("input[type=" + this.type + "][name=" + this.name + "]", $items.closest("form"));
                }
                $items.each(function() {
                    (field = validate.call(this, $(this), klass, parent)) && unvalidFields.push(field);
                });
            });
        });
    };
    // Ð£ï¿½ï¿½ï¿½íµ¥ï¿½ï¿½ï¿½íµ¥Í¨ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½ falseï¿½ï¿½ï¿½ï¿½È»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð³ï¿½ï¿½ï¿½ï¿½Ä¶ï¿½ï¿½ï¿½
    validateForm = function($fields, method, klass, parent) {
        if (method && !validateFields.length) return true;
        unvalidFields = $.map($fields, function(el) {
            var field = validate.call(null, $(el), klass, parent);
            if (field) return field;
        });
        return validateFields.length ? unvalidFields : false;
    };
    // ï¿½ï¿½ unvalidField ï¿½ï¿½É¾ï¿½ï¿½
    removeFromUnvalidFields = function($item) {
        var obj, index;
        // ï¿½ï¿½ unvalidFields ï¿½ï¿½É¾ï¿½ï¿½
        obj = $.grep(unvalidFields, function(item) {
            return item["$el"] = $item;
        })[0];
        if (!obj) return;
        index = $.inArray(obj, unvalidFields);
        unvalidFields.splice(index, 1);
        return unvalidFields;
    };
    // ï¿½ï¿½ï¿½ï¿½/É¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ class
    // @param `$item` {jQuery Object} ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ element
    // @param [optional] `klass` {String} ï¿½ï¿½Ò»ï¿½ï¿½ class Ä¬ï¿½ï¿½Öµï¿½ï¿½ `error`
    // @param [optional] `parent` {Boolean} Îª true ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½class ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Úµï¿½Ç°ï¿½ï¿½ï¿½ï¿½Ôªï¿½Øµï¿½ parentNode ï¿½ï¿½
    errorElement = function($item, parent) {
        return $item.data("parent") ? $item.closest($item.data("parent")) : parent ? $item.parent() : $item;
    };
    addErrorClass = function($item, klass, parent, emptyClass) {
        return errorElement($item, parent).addClass(klass + " " + emptyClass);
    };
    removeErrorClass = function($item, klass, parent) {
        removeFromUnvalidFields.call(this, $item);
        return errorElement($item, parent).removeClass(klass + " empty unvalid");
    };
    // ï¿½ï¿½ï¿½ï¿½ `novalidate` ï¿½ï¿½ form ï¿½Ð£ï¿½ï¿½ï¿½Ö¹ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¬ï¿½Ïµï¿½Ð£ï¿½é£¨ï¿½ï¿½Ê½ï¿½ï¿½Ò»ï¿½Â²ï¿½ï¿½ï¿½Ì«ï¿½ï¿½ï¿½ï¿½
    novalidate = function($form) {
        return $form.attr("novalidate") || $form.attr("novalidate", "true");
    };
    // ï¿½ï¿½ï¿½ï¿½ï¿½Ä²ï¿½ï¿½ï¿½ï¿½ß¼ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½yayayayayayaya!
    // ï¿½Ã·ï¿½ï¿½ï¿½$form.validator(options)
    // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½options = {
    //    identifie: {String}, // ï¿½ï¿½ÒªÐ£ï¿½ï¿½ï¿½Ä±íµ¥ï¿½î£¬ï¿½ï¿½Ä¬ï¿½ï¿½ï¿½ï¿½ `[required]`ï¿½ï¿½
    //    klass: {String}, // Ð£ï¿½é²»Í¨ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½Óµï¿½ class ï¿½ï¿½ï¿½ï¿½Ä¬ï¿½ï¿½ï¿½ï¿½ `error`ï¿½ï¿½
    //    isErrorOnParent: {Boolean} // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê± class ï¿½ï¿½ï¿½Úµï¿½Ç°ï¿½íµ¥ï¿½î»¹ï¿½Ç£ï¿½Ä¬ï¿½ï¿½ï¿½ï¿½ element ï¿½ï¿½ï¿½í£©
    //    method: {String | false}, // ï¿½ï¿½ï¿½ï¿½ï¿½íµ¥ï¿½ï¿½Ð£ï¿½ï¿½ï¿½Ä·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ false ï¿½Úµï¿½ submit ï¿½ï¿½Å¥Ö®Ç°ï¿½ï¿½Ð£ï¿½é£¨Ä¬ï¿½ï¿½ï¿½ï¿½ `blur`ï¿½ï¿½
    //    errorCallback(unvalidFields): {Function}, // ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ callbackï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ç³ï¿½ï¿½ï¿½ï¿½Ä±íµ¥ï¿½î¼¯ï¿½ï¿½
    //
    //    before: {Function}, // ï¿½íµ¥ï¿½ï¿½ï¿½ï¿½Ö®Ç°
    //    after: {Function}, // ï¿½íµ¥Ð£ï¿½ï¿½Ö®ï¿½ï¿½ï¿½ï¿½Ö»ï¿½Ð·ï¿½ï¿½ï¿½ True ï¿½íµ¥ï¿½Å¿ï¿½ï¿½Ü±ï¿½ï¿½á½»
    //  }
    $.fn.validator = function(options) {
        var $form = this, options = options || {}, identifie = options.identifie || ":input", klass = options.error || "error", isErrorOnParent = options.isErrorOnParent || true, method = options.method || "blur", before = options.before || function() {
            return true;
        }, after = options.after || function() {
            return true;
        }, errorCallback = options.errorCallback || function(fields) {}, $items = fields(identifie, $form);
        // ï¿½ï¿½Ö¹ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¬ï¿½ï¿½Ð£ï¿½ï¿½
        novalidate($form);
        // ï¿½íµ¥ï¿½ï¿½Ð£ï¿½ï¿½
        method && validateFields.call(this, $items, method, klass, isErrorOnParent);
        // ï¿½ï¿½ï¿½Ã»ï¿½ï¿½Û½ï¿½ï¿½ï¿½Ä³ï¿½ï¿½ï¿½íµ¥Ê±È¥ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¾
        $form[$form.on ? "on" : "bind"]("focusin", identifie, function(e) {
            removeErrorClass.call(this, $(this), "error unvalid empty", isErrorOnParent);
        });
        // ï¿½á½»Ð£ï¿½ï¿½
        $form[$form.on ? "on" : "bind"]("submit", function(e) {
            before.call(this, $items);
            validateForm.call(this, $items, method, klass, isErrorOnParent);
            // ï¿½ï¿½Ö¸ï¿½ï¿½ options.after ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½Ö»ï¿½Ðµï¿½ after ï¿½ï¿½ï¿½ï¿½ true ï¿½íµ¥ï¿½Å»ï¿½ï¿½á½»
            return unvalidFields.length ? (e.preventDefault(), errorCallback.call(this, unvalidFields)) : after.call(this, e, $items) && true;
        });
    };
}(jQuery);